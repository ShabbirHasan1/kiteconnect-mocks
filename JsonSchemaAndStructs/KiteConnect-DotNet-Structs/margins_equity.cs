// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var marginsEquity = MarginsEquity.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class MarginsEquity
    {
        [JsonProperty("$ref")]
        public string Ref { get; set; }

        [JsonProperty("$schema")]
        public Uri Schema { get; set; }

        [JsonProperty("definitions")]
        public Definitions Definitions { get; set; }
    }

    public partial class Definitions
    {
        [JsonProperty("Available")]
        public Available Available { get; set; }

        [JsonProperty("Data")]
        public Data Data { get; set; }

        [JsonProperty("MarginsEquity")]
        public MarginsEquityClass MarginsEquity { get; set; }
    }

    public partial class Available
    {
        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public AvailableProperties Properties { get; set; }

        [JsonProperty("required")]
        public string[] AvailableRequired { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class AvailableProperties
    {
        [JsonProperty("adhoc_margin")]
        public AdhocMargin AdhocMargin { get; set; }

        [JsonProperty("cash")]
        public AdhocMargin Cash { get; set; }

        [JsonProperty("collateral")]
        public AdhocMargin Collateral { get; set; }

        [JsonProperty("intraday_payin")]
        public AdhocMargin IntradayPayin { get; set; }

        [JsonProperty("live_balance")]
        public AdhocMargin LiveBalance { get; set; }

        [JsonProperty("opening_balance")]
        public AdhocMargin OpeningBalance { get; set; }
    }

    public partial class AdhocMargin
    {
        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public DataProperties Properties { get; set; }

        [JsonProperty("required")]
        public string[] DataRequired { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class DataProperties
    {
        [JsonProperty("available")]
        public AvailableClass Available { get; set; }

        [JsonProperty("enabled")]
        public AdhocMargin Enabled { get; set; }

        [JsonProperty("net")]
        public AdhocMargin Net { get; set; }

        [JsonProperty("utilised")]
        public Utilised Utilised { get; set; }
    }

    public partial class AvailableClass
    {
        [JsonProperty("$ref")]
        public string Ref { get; set; }
    }

    public partial class Utilised
    {
        [JsonProperty("additionalProperties")]
        public AdhocMargin AdditionalProperties { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class MarginsEquityClass
    {
        [JsonProperty("additionalProperties")]
        public bool AdditionalProperties { get; set; }

        [JsonProperty("properties")]
        public MarginsEquityProperties Properties { get; set; }

        [JsonProperty("required")]
        public string[] MarginsEquityClassRequired { get; set; }

        [JsonProperty("title")]
        public string Title { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }
    }

    public partial class MarginsEquityProperties
    {
        [JsonProperty("data")]
        public AvailableClass Data { get; set; }

        [JsonProperty("status")]
        public AdhocMargin Status { get; set; }
    }

    public partial class MarginsEquity
    {
        public static MarginsEquity FromJson(string json) => JsonConvert.DeserializeObject<MarginsEquity>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this MarginsEquity self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
